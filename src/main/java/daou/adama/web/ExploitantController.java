package daou.adama.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import daou.adama.entities.Exploitant;
import daou.adama.entities.repositories.ExploitantsRepository;

@Controller
public class ExploitantController {
	
	@Autowired
	ExploitantsRepository exploitantsRepository ;
	
	Exploitant newExploitant ;
	Exploitant exploitantDetail ;

	@GetMapping("/ajouter-exploitant")
	public String AjouterExploitant(Model model) {
		newExploitant = new Exploitant() ;
		model.addAttribute("newExploitant", newExploitant) ;
		return "exploitant-ajouter" ;
	}
	
	@GetMapping("/liste-exploitant")
	public String ListeExploitant(Model model) { // L'object Model est celui qui permet de tranferer les variables entre le controlleur et la vue html 
		model.addAttribute("allExploitants", exploitantsRepository.findAll()) ;
		return "exploitant-liste" ;
	}
	
	@PostMapping("/enregistrer-exploitant")
	public String save(Model model, @ModelAttribute Exploitant exploitantReçu) {
		exploitantsRepository.save(exploitantReçu) ;
		return ListeExploitant(model) ;
	}
	
	@GetMapping("detail-exploitant")
	public String detail(@RequestParam Long id, Model model) {
		exploitantDetail = exploitantsRepository.findById(id).get() ; // Permet de faire comme en SQL : select * from exploitant where id=id
		model.addAttribute("exploitantDetail", exploitantDetail) ; // On envoie l'object exploitant dans le html "exploitant-detail.html"
		return "exploitant-detail";
	}
	
	@GetMapping("modifier-exploitant") 
	public String modifier(Model model) {
		model.addAttribute("newExploitant", exploitantDetail) ;
		return "exploitant-modifier" ;
	}
	
	@PostMapping("update-exploitant")
	public String update(@ModelAttribute Exploitant exploitantReçu, Model model, @RequestParam Long id) {
		exploitantReçu.setId(id);
		exploitantsRepository.save(exploitantReçu) ; // Permet de sauvegarder dans la base de donnees, table exploitant
		return ListeExploitant(model) ;
	}
	
	@GetMapping("supprimer-exploitant")
	public String delete(Model model) {
		exploitantsRepository.delete(exploitantDetail);
		return ListeExploitant(model) ; // Appel la methode/fonction qui affiche la liste des exploitants dans le html
	}

}
